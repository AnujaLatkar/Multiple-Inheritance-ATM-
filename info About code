#Multiple Inheritance Using Interface in Java (ATM Machine Example)

---Multiple Inheritance in Java---
In Java, multiple inheritance of classes is not supported.
This means a Java class cannot extend more than one class.
The main reason for this restriction is to avoid ambiguity problems, such as the "Diamond Problem,"
where itâ€™s unclear which parent class method to inherit if they have the same method name.

---Example Context: ATM Machine
Imagine an ATM machine system with multiple functionalities:
>Cash Withdrawal
>Balance Inquiry
>Cash Deposit 
     These functionalities can be modeled as separate interfaces because
they represent different capabilities that a machine can implement.

----Using Interfaces to Demonstrate Multiple Inheritance

Define two interfaces:

CashWithdrawal with a method withdraw()
BalanceInquiry with a method showbalance()
cash deposit with a method deposit()

---conslusion ----
   Java does not support multiple inheritance through classes to avoid 
   complexity and ambiguity issues. However, it allows multiple inheritance 
   through interfaces, enabling a class to inherit behaviors from multiple
   sources safely. This design helps maintain simplicity while providing 
   flexibility and supporting key object-oriented principles like polymorphism.
